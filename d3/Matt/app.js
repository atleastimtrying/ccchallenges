// Generated by CoffeeScript 1.3.3
(function() {
  var Hugo, launcher;

  Hugo = (function() {

    function Hugo(json) {
      this.json = json;
      this.output = document.getElementById('display');
      this.buildElements();
      this.animate();
    }

    Hugo.prototype.buildElements = function() {
      return this.output.innerHTML = this.buildAssociativeOrArray(this.json);
    };

    Hugo.prototype.buildAssociativeOrArray = function(obj) {
      if (this._isArray(obj)) {
        return this.buildArray(obj);
      }
      if (this._isString(obj)) {
        return this.buildString(obj);
      }
      return this.buildAssociative(obj);
    };

    Hugo.prototype.buildAssociative = function(hsh) {
      var k, out;
      out = "<div>";
      for (k in hsh) {
        out += "<section>" + this.buildString(k) + this.buildAssociativeOrArray(hsh[k]) + "</section>";
      }
      out += "</div>";
      return out;
    };

    Hugo.prototype.buildString = function(str) {
      return "<span>" + str + "</span>";
    };

    Hugo.prototype.buildArray = function(arr) {
      var item, out, _i, _len;
      out = "<ul>";
      for (_i = 0, _len = arr.length; _i < _len; _i++) {
        item = arr[_i];
        out += "<li> " + (this.buildAssociativeOrArray(item)) + " </li>";
      }
      out += "</ul>";
      return out;
    };

    Hugo.prototype.animate = function() {};

    Hugo.prototype._isArray = function(obj) {
      return Object.prototype.toString.call(obj) === '[object Array]';
    };

    Hugo.prototype._isString = function(obj) {
      return (typeof obj) === 'string';
    };

    return Hugo;

  })();

  launcher = function() {
    return new Hugo(window.my_json);
  };

  document.body.onload = launcher;

}).call(this);
